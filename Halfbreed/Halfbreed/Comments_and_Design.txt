
A table for the actual save games themselves - may require more than 1.

Figure out how to store complex stuff in the database - probably serialization again.

Should swap new game so that it saves a new game and then calls load game.



Means:

On exit of level - save or continue.
All load games restart in the town hub for the chapter.
The deck should reset between levels as well.
Anathema is only for the current level and resets as well.
The variation within a level needs to increase to improve replayability.

So - what needs to get saved?

Achievements/Unlocks
Equipment/Items/Money
Abilities and setup

Means logging is only for the game experience for a single level.

Need to be able to:
	Check if an entity has a certain type of component.
	Get the actual component associated with an entity.
	Get all entities with a certain type of component.
	Only store each component in a single location.

	If each component keeps track of entity id, then can we just keep 2 lists?
	One of components and another of component types?

Start the component database and component database connection class.
Call it something more useful though - it's permenant, not user based.

Add a cleanup and a destroy method to Component and PositionComponent.