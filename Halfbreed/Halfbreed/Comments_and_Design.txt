
A table for the actual save games themselves - may require more than 1.

Figure out how to store complex stuff in the database - probably serialization again.

Should swap new game so that it saves a new game and then calls load game.



Means:

On exit of level - save or continue.
All load games restart in the town hub for the chapter.
The deck should reset between levels as well.
Anathema is only for the current level and resets as well.
The variation within a level needs to increase to improve replayability.

So - what needs to get saved?

Achievements/Unlocks
Equipment/Items/Money
Abilities and setup

Means logging is only for the game experience for a single level.




Next Steps:

The put tiles into the db and create a converter for them, + tests.
Put tile onto furnishing - add tests and sort out drawing.

Implement the trait section and flesh out some additional traits for both Furnishings and Materials.
Write the tests for this.

Implement a simple get description.
Add elevation to tiles.

Add harvesting nodes to furnishing db.

Start on Actors - at least need to get the player in.
Timing and action queue.
Movement.
Interaction.
Etc.


Damageable.
Position.
Description.
Traits.
Concealed.
Light Source.
Container.


Would probably prefer 3-4 base entity types.
With possibly 3-4 additional types - things like trapped, light, fluid, etc.



Actor
Furnishing - Trap, Harvestable, Liquid.
Item - Equipment, Consumable, Resource, Money, QuestItem.


Furnishing

Interaction + trigger
Movement + trigger
Harvestable
Tile
Liquid

Item

Carryable
Equipable
Usable
Resource
Quantity
Identified
Cursed
Weight
QuestItem

Actor

Action Block
Ability Block
Skill Block
Input Source - AI or Player
Conversation - Quest, Merchant, Trainer
PrimaryStats
SecondaryStats



What ultimately is the game supposed to be?
Roguelike, CCG, RPG, loot finder, achievement system?
Slot abilities ALA path to exile?
Find them and build a deck - essentially the same.

Select trees on rest?
That limits each slot to 8? Then trigger runes when they are activated.
Allow hot-keys to be setup for common abilities.

Give weapon basic attack and up to 3 other abilities?
Give shield up to 2 abilites (1h weapon is 2, 2h weapon is 4).

Becomes 4 from 16 groups, 2 from 12 groups, 2 from 2 groups for Dragonlord - every other is much easier.
Need to make sure there is some relevance to every group for every class that can use it.

Advanced classes are 4 from 8 and 2 from 2, easy enough.

Now much happier about random distribution of ability related stuff.
Make it set abilities - trained upgrades and skillup through practice?

When do runes recharge?
On level change, on rest or something else?

What are the main collectibles then?

Recipes
Set/Rare/Unique items

Can a rune item be a part of the game.
I.e. have a way of upgrading the runes on the item - more powerful, frequent, etc.
Should be stuff that is common to every ability, recharge, power level, etc.
Applies to all runes in a tier.

Have it so that even if they recharge, it takes time. This is another aspect to the runes.

4 Parts - frequency of use, ease of recharge, primary power level, secondary power level.
Means power level gets driven from rune, stat and passive - looks pretty similar to old setup.
Passive is split between xp based and achievement based.
XP based is 1-100, therefore 1 to 6 times - achievement based adds up to 2 * additional.
Each point buys + 5%.
Runes are  1 to 3 times.
Stats are 1 to 3 times.
Make frequency of use set - just have recharge change.
Split them out by skill - recharge, power level, 3 "addon effects".
Gets back to roughly where we were before - but a cleaner mechanic.

Flat modification to defensive stats needs to be for difficulty - not ACT.